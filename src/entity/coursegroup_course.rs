//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::ActiveValue::Set;
use sea_orm::entity::prelude::*;
use sea_orm::InsertResult;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "coursegroup_course")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub coursegroup_id: i32,
    #[sea_orm(primary_key)]
    pub course_id: i32,
}

pub async fn link(coursegroup_id: i32, course_id: i32, db: &DatabaseConnection) -> Result<InsertResult<ActiveModel>, DbErr> {
    Ok(Entity::insert(ActiveModel {
        coursegroup_id: Set(coursegroup_id),
        course_id: Set(course_id),
    }).exec(db).await?)
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
    belongs_to = "super::coursegroup::Entity",
    from = "Column::CoursegroupId",
    to = "super::coursegroup::Column::Id"
    )]
    Coursegroup,
    #[sea_orm(
    belongs_to = "super::course::Entity",
    from = "Column::CourseId",
    to = "super::course::Column::Id"
    )]
    Course,
}

impl ActiveModelBehavior for ActiveModel {}
