//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "course")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Custom(\"LONGTEXT\".to_owned())")]
    pub name: String,
    #[sea_orm(column_type = "Custom(\"LONGTEXT\".to_owned())")]
    pub code: String,
    #[sea_orm(column_type = "Custom(\"LONGTEXT\".to_owned())")]
    pub code_id: String,
    pub credit: f64,
    #[sea_orm(column_type = "Custom(\"LONGTEXT\".to_owned())")]
    pub department: String,
    #[sea_orm(column_type = "Custom(\"LONGTEXT\".to_owned())")]
    pub campus_name: String,
    #[sea_orm(column_type = "Custom(\"LONGTEXT\".to_owned())")]
    pub teachers: String,
    pub max_student: i32,
    pub week_hour: i32,
    pub year: i32,
    pub semester: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::course_review::Entity")]
    CourseReview,
    #[sea_orm(has_many = "super::coursegroup_course::Entity")]
    CoursegroupCourse,
}

impl Related<super::course_review::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CourseReview.def()
    }
}

impl Related<super::coursegroup_course::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CoursegroupCourse.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
